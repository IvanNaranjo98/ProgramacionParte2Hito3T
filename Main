package misPaquetes;
import java.util.HashMap;
import java.util.Scanner;

// Clase principal para gestionar animales y adopciones
public class Main {
    private HashMap<Integer, Animal> animales;
    private HashMap<String, Adopcion> adopciones; // Estructura para almacenar adopciones por DNI

    public Main() {
        animales = new HashMap<>();
        adopciones = new HashMap<>();
    }

    // Método para registrar un animal
    public void altaAnimal(Animal animal) {
        if (animales.containsKey(animal.getNumeroChip())) {
            System.out.println("Error: Ya existe un animal con el número de chip " + animal.getNumeroChip());
        } else {
            animales.put(animal.getNumeroChip(), animal);
            System.out.println("Animal registrado con éxito");
        }
    }

    // Método para listar todos los animales
    public void listarAnimales() {
        if (animales.isEmpty()) {
            System.out.println("No hay animales registrados.");
        } else {
            for (Animal animal : animales.values()) {
                animal.mostrar();
            }
        }
    }

    // Método para buscar un animal por chip
    public void buscarAnimal(int numeroChip) {
        Animal animal = animales.get(numeroChip);
        if (animal != null) {
            animal.mostrar();
        } else {
            System.out.println("No se encontró ningún animal con el chip " + numeroChip);
        }
    }

    // Método para realizar una adopción
    public void realizarAdopcion(int numeroChip, String nombreAdoptante, String dniAdoptante) {
        Animal animal = animales.get(numeroChip);
        if (animal == null) {
            System.out.println("No se encontró ningún animal con el chip " + numeroChip);
        } else if (animal.esAdoptado()) {
            System.out.println("El animal ya está adoptado.");
        } else {
            Adopcion adopcion = new Adopcion(animal, nombreAdoptante, dniAdoptante);
            adopciones.put(dniAdoptante, adopcion);
            animal.setAdoptado(true);
            System.out.println("Adopción realizada con éxito.");
        }
    }

    // Método para dar de baja un animal
    public void darDeBaja(int numeroChip) {
        Animal animal = animales.get(numeroChip);
        if (animal == null) {
            System.out.println("No se encontró ningún animal con el chip " + numeroChip);
        } else {
            if (animal.esAdoptado()) {
                for (Adopcion adopcion : adopciones.values()) {
                    if (adopcion.getAnimal().getNumeroChip() == numeroChip) {
                        adopciones.remove(adopcion.getDniAdoptante());
                        break;
                    }
                }
            }
            animales.remove(numeroChip);
            System.out.println("Animal dado de baja con éxito.");
        }
    }

    // Método para mostrar estadísticas de gatos
    public void mostrarEstadisticasGatos() {
        int totalGatos = 0;
        int gatosLeucemia = 0;
        for (Animal animal : animales.values()) {
            if (animal instanceof Gato) {
                totalGatos++;
                if (((Gato) animal).getTestLeucemia()) {
                    gatosLeucemia++;
                }
            }
        }
        System.out.println("Total de gatos: " + totalGatos);
        System.out.println("Gatos con test de leucemia positivo: " + gatosLeucemia);
    }

    public static void main(String[] args) {
        Main sistema = new Main();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("1. Dar de alta animal");
            System.out.println("2. Listar animales");
            System.out.println("3. Buscar animal");
            System.out.println("4. Realizar adopción");
            System.out.println("5. Dar de baja");
            System.out.println("6. Mostrar estadísticas de gatos");
            System.out.println("7. Salir");
            System.out.print("Seleccione una opción: ");

            try {
                int opcion = scanner.nextInt();
                scanner.nextLine();

                if (opcion == 7) {
                    System.out.println("Saliendo del sistema...");
                    break;
                }

                switch (opcion) {
                    case 1: // Dar de alta animal
                        System.out.print("¿Es perro (p) o gato (g)? ");
                        String tipo = scanner.nextLine();
                        System.out.print("Número de chip: ");
                        int chip = scanner.nextInt();
                        scanner.nextLine();
                        System.out.print("Nombre: ");
                        String nombre = scanner.nextLine();
                        System.out.print("Edad: ");
                        int edad = scanner.nextInt();
                        scanner.nextLine();
                        System.out.print("Raza: ");
                        String raza = scanner.nextLine();
                        System.out.print("¿Adoptado? (s/n): ");
                        boolean adoptado = scanner.nextLine().equalsIgnoreCase("s");

                        if (tipo.equalsIgnoreCase("p")) {
                            System.out.print("Tamaño (pequeño/mediano/grande): ");
                            String tamano = scanner.nextLine();
                            Perro perro = new Perro(chip, nombre, edad, raza, adoptado, tamano);
                            sistema.altaAnimal(perro);
                        } else if (tipo.equalsIgnoreCase("g")) {
                            System.out.print("¿Test leucemia positivo? (s/n): ");
                            boolean test = scanner.nextLine().equalsIgnoreCase("s");
                            Gato gato = new Gato(chip, nombre, edad, raza, adoptado, test);
                            sistema.altaAnimal(gato);
                        } else {
                            System.out.println("Tipo de animal no válido.");
                        }
                        break;

                    case 2: // Listar animales
                        sistema.listarAnimales();
                        break;

                    case 3: // Buscar animal
                        System.out.print("Ingrese el número de chip a buscar: ");
                        int chipBuscar = scanner.nextInt();
                        sistema.buscarAnimal(chipBuscar);
                        break;

                    case 4: // Realizar adopción
                        System.out.print("Número de chip del animal: ");
                        int chipAdopcion = scanner.nextInt();
                        scanner.nextLine();
                        System.out.print("Nombre del adoptante: ");
                        String nombreAdoptante = scanner.nextLine();
                        System.out.print("DNI del adoptante: ");
                        String dniAdoptante = scanner.nextLine();
                        sistema.realizarAdopcion(chipAdopcion, nombreAdoptante, dniAdoptante);
                        break;

                    case 5: // Dar de baja
                        System.out.print("Número de chip del animal a dar de baja: ");
                        int chipBaja = scanner.nextInt();
                        sistema.darDeBaja(chipBaja);
                        break;

                    case 6: // Mostrar estadísticas de gatos
                        sistema.mostrarEstadisticasGatos();
                        break;

                    default:
                        System.out.println("Opción no válida.");
                        break;
                }
              //Control de errores
            } catch (Exception e) {
                System.out.println("Error: Entrada inválida. Por favor, intenta de nuevo.");
                scanner.nextLine();
            }
        }
        scanner.close();
    }
}
